// Import required modules
const crypto = require('crypto');
const qrcode = require('qrcode');

// Generate a unique session ID and device code
function generatePairingCode() {
  const sessionId = crypto.randomBytes(16).toString('hex'); // 32-character session ID
  const deviceCode = Math.floor(100000 + Math.random() * 900000).toString(); // 6-digit code
  return { sessionId, deviceCode };
}

// Store active pairing codes (use a database in production)
const activePairs = new Map();

// Generate a pairing link and QR code
async function generatePairingLink(botName = 'Brovhi MD Bot') {
  const { sessionId, deviceCode } = generatePairingCode();
  
  // Store the pair with expiration (e.g., 5 minutes)
  activePairs.set(sessionId, { 
    deviceCode, 
    verified: false, 
    expiresAt: Date.now() + 300000 
  });

  // Create pairing URL
  const pairingUrl = `https://api.brovhimd.com/pair?session=${sessionId}&code=${deviceCode}`;
  
  // Generate QR Code
  const qr = await qrcode.toDataURL(pairingUrl);
  
  return {
    sessionId,
    deviceCode,
    pairingUrl,
    qrCode: qr,
    instructions: `Scan the QR code or visit ${pairingUrl} to link with ${botName}`
  };
}

// Verify device code
function verifyPairing(sessionId, userEnteredCode) {
  const pair = activePairs.get(sessionId);
  if (!pair || pair.expiresAt < Date.now()) return false;
  if (pair.deviceCode === userEnteredCode) {
    pair.verified = true;
    return true;
  }
  return false;
}
